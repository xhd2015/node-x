!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(globalThis,(()=>(()=>{"use strict";var e={258:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.formatWebpackConfigJS=n.formatTsConfigJSON=n.formatPackageJSON=void 0,n.formatPackageJSON=function(e){const n=e?.installMap||{};return`{\n        "name": "${e?.name||"tmp"}",\n        "version": "0.0.1",\n        "scripts": {\n            "build": "node ./node_modules/.bin/webpack --config webpack.config.js --progress --mode=production",\n            "build-dev": "node ./node_modules/.bin/webpack --config webpack.config.js --progress --mode=development",\n            "start":"npm install && npm run build && node bin/run.js \\"$@\\""\n        },\n        "dependencies": ${JSON.stringify(n)} ,\n        "devDependencies": {\n            "@babel/cli": "^7.1.0",\n            "@babel/core": "^7.1.0",\n            "@babel/preset-env": "^7.1.0",\n            "@types/node": "^18.11.18",\n            "babel-loader": "^8.1.0",\n            "file-loader": "^6.0.0",\n            "ts-loader": "^9.3.1",\n            "webpack-cli": "^4.10.0"\n        }\n    }\n    `},n.formatTsConfigJSON=function(e){const n={};return Object.keys(e?.importMap||{}).forEach((t=>{let o=e.importMap[t];o.endsWith("/")||(o+="/"),n[t+"/*"]=[o+"*"]})),`{\n        // Change this to match your project\n        // "include": [],\n        "compilerOptions": {\n            // Tells TypeScript to read JS files, as\n            // normally they are ignored as source files\n            // "allowJs": true,\n            // Generate d.ts files\n            // "declaration": true,\n            // This compiler run should\n            // only output d.ts files\n            // "emitDeclarationOnly": true,\n            // Types should go into this directory.\n            // Removing this would place the .d.ts files\n            // next to the .js files\n            //   "outDir": "dist"\n            "target": "es6",\n            "lib": [\n                "ES2021",\n                "ES2021.String"\n            ],\n            // "target": "es6",\n            "module": "commonjs",\n            // "module": "ES2015",\n            // "outDir": "src/debug",\n            "moduleResolution": "node",\n            "rootDirs": ["./"],\n            "paths": ${JSON.stringify(n)}\n        },\n        "exclude": []\n    }`},n.formatWebpackConfigJS=function(e){const n=[];return Object.keys(e?.importMap||{}).forEach((t=>{let o=e.importMap[t].trim();n.push(`"${t}": path.resolve(__dirname,"${o}")`)})),`const path = require("path");\n    \n    module.exports = {\n      entry: {\n        run: {\n          import: "./run.ts",\n          filename: "run.js",\n        },\n      },\n      output: {\n        path: path.resolve(__dirname, "bin"),\n        libraryTarget: "umd", // for nodejs need this\n        globalObject: "globalThis", // goja only recognize globalThis, not the default global.\n      },\n      module: {\n        rules: [\n          {\n            test: /.ts$/,\n            // exclude: /(node_modules)/,\n            use: {\n              loader: "ts-loader",\n              options: {\n                transpileOnly: true,\n              },\n            },\n          },\n          {\n            test: /.(js)$/,\n            exclude: /(node_modules)/,\n            resolve: {\n              extensions: [".ts", ".js"],\n            },\n            use: {\n              loader: "babel-loader",\n              options: {\n                presets: ["@babel/preset-env"],\n              },\n            },\n          },\n        ],\n      },\n      resolve: {\n        alias: ${"{"+n.join(",\n")+"}"},\n        extensions: [".ts", ".js"],\n      },\n      target: "node",\n      node:{\n        __filename:true,\n        __dirname:true,  // these two options make the __filename & __dirname correspond to original file name\n      },\n      plugins: [],\n      // devtool: "source-map",\n    };\n    `}},900:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.runCmd=n.parseOptions=n.runOutput=n.catchedRun=n.run=void 0;const o=t(81),r=t(265);async function i(e,n){const t=o.spawn("bash",[`-e${n?.debug?"x":""}c`,e,"--",...n?.args||[]],{cwd:n?.cwd,env:{...process.env,...n?.env}});t.stderr.on("data",(e=>process.stderr.write(e)));let r="";return n?.needStdout?t.stdout.on("data",(e=>r+=e)):t.stdout.on("data",(e=>process.stdout.write(e))),new Promise(((o,i)=>{t.on("error",(function(e){i(e)})),t.on("close",(function(t){if(0!==t){let o=n?.description;const r=100;if(!o)if(e.length<=r)o=e;else{const n=e.split("\n").map((e=>e.trim())).join("\n");o=n.length<=r?n:n.slice(0,r)+"..."}i(new Error(`exit code ${t}: ${o}`))}else o({exitCode:t,stdout:r})}))}))}Object.defineProperty(n,"parseOptions",{enumerable:!0,get:function(){return r.parse}}),n.run=i,n.runCmd=i,n.catchedRun=async function(e){e().catch((e=>{console.error(e?.message||e),process.exit(1)}))},n.runOutput=async function(e,n){return i(e,{...n,needStdout:!0}).then((e=>e.stdout.endsWith("\n")?e.stdout.slice(0,e.stdout.length-1):e.stdout))}},265:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.parse=void 0,n.parse=function(e,n,t){null==t&&(t=process.argv.slice(2));const o=n.split(/\s+/),r={},i={},s={};for(let e of o){let n,t=e.lastIndexOf("=");-1!=t&&(n=e.slice(t+1),e=e.slice(0,t));let o="zero";e.endsWith("::")?(o="many",e=e.slice(0,e.length-2)):e.endsWith(":")&&(o="one",e=e.slice(0,e.length-1));const l=e.split(",");if(0==l.length)continue;const a=l[l.length-1];if(null!=i[a])throw new Error(`duplicate option name:${a}`);i[a]=o,n&&(s[a]=n);for(const e of l)if(0!=e.length){if(null!=r[e])throw new Error(`duplicate option name:${e}`);r[e]=a}}const l=[],a={},c={};let u=0;function d(e,n){let o=n===c;o&&(n=null);const l=r[e];if(!l)throw new Error(`no such option:${e}`);const d=s[l];if(d&&(a[d]=e),"zero"===i[l]){if(o)return void(a[l]=!0);if(null!=n)if("on"==n||"On"==n||"ON"==n||"true"==n||"True"==n||"TRUE"==n)a[l]=!0;else{if("off"!=n&&"Off"!=n&&"OFF"!=n&&"false"!=n&&"False"!=n&&"FALSE"!=n)throw new Error(`option requires no argument:${e},except on/On/ON/true/True/TRUE or off/Off/OFF/false/False/FALSE`);a[l]=!1}else a[l]=!0}else if("one"===i[l]){if(o&&(n=t[++u]),null==n)throw new Error(`option requires one argument:${e}`);a[l]=n}else{if("many"!==i[l])throw new Error(`unknown option repeat:${e} ${i[l]}`);if(o&&(n=t[++u]),null==n)throw new Error(`option requires argument:${e}`);null==a[l]?a[l]=[n]:a[l].push(n)}}for(;u<t.length;u++){const e=t[u];if("--"==e){l.push(...t.slice(u+1));break}if("-"!=e)if(e.startsWith("--")){let n=e.slice(2);const t=n.lastIndexOf("=");let o;-1!=t?(o=n.slice(t+1),n=n.slice(0,t)):o=c,d(n,o)}else if(e.startsWith("-")){const n=e.slice(1);if(1==n.length){d(n,c);continue}const t=n[0],o=r[t],s=i[o];if("one"==s||"many"==s)d(t,n.slice(1));else if("zero"==s){for(const e of n.slice(0,n.length-1))d(e,null);d(n[n.length-1],c)}}else l.push(e);else l.push(e)}function p(){let n=e;return n.startsWith("\n")&&(n=n.slice(1)),n.endsWith("\n")&&(n=n.slice(0,n.length-1)),n}return!0===a.help&&(console.log(p()),process.exit(0)),{args:l,options:a,getHelp:p}}},65:(e,n)=>{function t(e,n,t){const o=[],r=e.length;for(let i=0;i<r;){let s=n(e,i);s<0&&(s=r),o.push(t(i,s,e)),i=s+1}return o}Object.defineProperty(n,"__esModule",{value:!0}),n.addSuffix=n.trimSuffix=n.trimPrefix=n.iterMatch=n.iterLines=void 0,n.iterLines=function(e,n){return t(e,((e,n)=>e.indexOf("\n",n)),n)},n.iterMatch=t,n.trimPrefix=function(e,n){return e?.startsWith?.(n)?[e.slice(n.length),!0]:[e,!1]},n.trimSuffix=function(e,n){return e?.endsWith?.(n)?[e.slice(0,e.length-n.length),!0]:[e,!1]},n.addSuffix=function(e,n){return e.endsWith(n)?e:e+n}},81:e=>{e.exports=require("child_process")},113:e=>{e.exports=require("crypto")},292:e=>{e.exports=require("fs/promises")},37:e=>{e.exports=require("os")},17:e=>{e.exports=require("path")}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={exports:{}};return e[o](i,i.exports,t),i.exports}var o={};return(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.run=void 0;const n=t(17),r=t(292),i=t(37),s=t(258),l=t(900),a=t(113),c=t(65);async function u(){const e=process.env.NX_FLAGS;let t=[...process.argv.slice(2)];e&&(t=[...e.split(" ").map((e=>e.trim())),...t]);const{args:o,options:c}=(0,l.parseOptions)("Usage: nx [OPTIONS] <script> [--] [script-args...]\n\nOptions:\n  -h, --help        show help message\n  -p, --print-dir   print the generated directory\n      --root        print root directory and exit\n  -x, --debug       log debug info\n  -c, --code        open the directory with vscode\n  -f, --force       force install modules\n      --clean       clean the target dir before writing files\n      --rm          remove the target dir and exit\n      --keep-link   don't resolve the script if it is a link\n      --install     install dependencies and exit, i.e. run `npm install` in target directory\n      --mode=production|development    default mode: development           \n\nOnce installed with `npm install -g node-ext`, `nx` will be automatically linked to /usr/local/bin so you can just use `nx` to run scripts\n\nExample:\n  $ nx --help           # show help\n  $ nx test.ts          # run test.ts\n  $ nx -x test.ts       # run test.ts, with debug info\n  $ nx --code test.ts   # open the directory\n  $ nx update           # update node-ext version\n\nCompare with `ts-node`: you can also use `ts-node` to run typescript, e.g. `npx -g ts-node --transpile-only test.ts`.\nThe advantage that `nx` provides is it can provide default `webpack.config.js` and `tsconfg.json`,\nand with `--code` option we can edit ts files with vscode super easily.\n\n","h,help p,print-dir root x,debug c,code f,force clean rm keep-link install mode:",t),{debug:u,force:f,clean:m,rm:h,root:g,"print-dir":b,install:w,"keep-link":x,mode:v}=c;let y=c?.code;const[$,...O]=o,j=(0,i.tmpdir)(),k=n.join(j,"nx-sync");if(g)return void console.log(k);if(!$)throw new Error("requires script to run");if("update"===$)return void await(0,l.run)("npm remove -g node-ext; npm install -g node-ext",{debug:u});let _=n.resolve($);if(!n.isAbsolute(_))throw new Error(`failed to make ${$} absolute, the resolved path is ${_}`);x||(_=await r.realpath(_));const E=await r.stat(_).catch((e=>{throw new Error(`not exists: ${$}`)}));let S=!1;if(E.isDirectory())y=!0,S=!0;else if(!E.isFile())throw new Error(`not a file: ${$}`);const T=S?_:n.dirname(_);if(!n.isAbsolute(T))throw new Error(`failed to detect absolute dir of ${$}, the resolved dir is ${T}`);if(T===k||T.startsWith(k))throw new Error(`${$} resides in nx-sync dir: ${k}, try another location`);const[M,P]=await Promise.all([S?null:d(_),(0,l.runOutput)("npm -g root")]),W={...p(M?.importMap,P),"@":"./","@node-ext":n.resolve(P,"node-ext/lib")},F=n.join(k,T);if(u&&console.error("target dir:",F),(m||h)&&(await r.rm(F,{recursive:!0}),h))return;await r.mkdir(F,{recursive:!0});const J=(0,s.formatPackageJSON)({name:"tmp",installMap:M?.installMap}),N=(0,s.formatTsConfigJSON)({importMap:W}),R=(0,s.formatWebpackConfigJS)({importMap:W}),q="package.json.checksum",C=f?"":await r.readFile(n.join(F,q),{encoding:"utf-8"}).catch((e=>{})),D=(0,a.createHash)("md5").update(J).digest("hex"),A={"package.json":J,[q]:D,"tsconfig.json":N,"webpack.config.js":R};if(S||(A["run.ts"]=`import "${_}"`),await Promise.all([...Object.keys(A).map((e=>r.writeFile(n.join(F,e),A[e]))),(0,l.run)(`rm -rf "${F}/src" ; ln -s "${T}" "${F}/src"`,{debug:u})]),b)return void console.log(F);if(y){const e=S?"":`--goto "${F}/src/${n.basename(_)}"`;return void await(0,l.run)(`code ${e} "${F}"`,{debug:u})}if(w)return void await(0,l.run)("npm install --no-audit --no-fund",{debug:u,cwd:F});let I=f||C!==D;if(!I){let e=!1;await r.stat(n.join(F,"node_modules")).then((n=>e=n.isDirectory())).catch((e=>{})),I=!e}const L="npm run "+("production"===v?"build":"build-dev"),G=u?"":"&>/dev/null";await(0,l.run)(`\n    set -e\n    (\n        cd "$TARGET_DIR"\n        ${I?"npm install --no-audit --no-fund "+G:""}  # npm install is slow so we need a checksum to avoid repeat\n        ${L} ${G} ; # dev mode webpack can use build cache\n    )\n    node "$TARGET_DIR/bin/run.js" "$@"\n    `,{debug:u,args:O,env:{TARGET_DIR:F}}).catch((e=>{u&&console.error(e?.message||e),process.exit(1)}))}async function d(e){const n=(i=await r.readFile(e,{encoding:"utf-8"}),(0,c.iterLines)(i,((e,n)=>{const t=i.slice(e,n);if(t.startsWith(f))return t.slice(f.length).trim()})).filter((e=>e))),t={},o={};var i;return n?.forEach?.((e=>{if(e.startsWith("#"))return;let[n,r]=(0,c.trimPrefix)(e,"use ");if(r){let[o,r]=n.split(" ",2);if(o=o.trim(),r=r.trim(),!o||!r)throw new Error(`invalid ${e}: requires name or dir`);t[o]=r}else[n,r]=(0,c.trimPrefix)(e,"install "),r&&n.split(" ").map((e=>e.trim())).map((e=>e.split("@",2))).filter((e=>e[0])).forEach((e=>o[e[0]]=e[1]||"latest"))})),{importMap:t,installMap:o}}function p(e,t){const o={};return Object.keys(e||{}).forEach((r=>{let i=e[r],[s,l]=(0,c.trimPrefix)(i,"$NPM_ROOT/");if(l)i=n.join(t,s);else{let[e,t]=(0,c.trimPrefix)(i,"~/");t&&(i=n.join(process.env.HOME,e))}o[r]=i})),o}e.run=u;const f="//!node-ext:";u().catch((e=>{console.error(e.message),process.exit(1)})).finally((()=>{}))})(),o})()));