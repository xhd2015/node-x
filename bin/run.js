!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(globalThis,(()=>(()=>{"use strict";var e={258:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.formatWebpackConfigJS=n.formatTsConfigJSON=n.formatPackageJSON=void 0,n.formatPackageJSON=function(e){return`{\n        "name": "${e||"tmp"}",\n        "version": "0.0.1",\n        "dependencies": {\n        },\n        "scripts": {\n            "build": "webpack --config webpack.config.js --progress --mode=production",\n            "build-dev": "webpack --config webpack.config.js --progress --mode=development",\n            "start":"npm install && npm run build && node bin/run.js \\"$@\\""\n        },\n        "devDependencies": {\n            "@babel/cli": "^7.1.0",\n            "@babel/core": "^7.1.0",\n            "@babel/preset-env": "^7.1.0",\n            "@types/node": "^18.11.18",\n            "babel-loader": "^8.1.0",\n            "file-loader": "^6.0.0",\n            "ts-loader": "^9.3.1",\n            "webpack-cli": "^4.10.0"\n        }\n    }\n    `},n.formatTsConfigJSON=function(){return'{\n        // Change this to match your project\n        // "include": [],\n        "compilerOptions": {\n            // Tells TypeScript to read JS files, as\n            // normally they are ignored as source files\n            // "allowJs": true,\n            // Generate d.ts files\n            // "declaration": true,\n            // This compiler run should\n            // only output d.ts files\n            // "emitDeclarationOnly": true,\n            // Types should go into this directory.\n            // Removing this would place the .d.ts files\n            // next to the .js files\n            //   "outDir": "dist"\n            "target": "es6",\n            "lib": [\n                "ES2021",\n                "ES2021.String"\n            ],\n            // "target": "es6",\n            "module": "commonjs",\n            // "module": "ES2015",\n            // "outDir": "src/debug",\n            "moduleResolution": "node",\n            "rootDirs": ["./"],\n            "paths": {\n              "@/*":["./*"],\n              "@node-ext/*": ["./lib/*"]\n            }\n        },\n        "exclude": []\n    }'},n.formatWebpackConfigJS=function(){return'const path = require("path");\n    \n    module.exports = {\n      entry: {\n        run: {\n          import: "./run.ts",\n          filename: "run.js",\n        },\n      },\n      output: {\n        path: path.resolve(__dirname, "bin"),\n        libraryTarget: "umd", // for nodejs need this\n        globalObject: "globalThis", // goja only recognize globalThis, not the default global.\n      },\n      module: {\n        rules: [\n          {\n            test: /.ts$/,\n            // exclude: /(node_modules)/,\n            use: {\n              loader: "ts-loader",\n              options: {\n                transpileOnly: true,\n              },\n            },\n          },\n          {\n            test: /.(js)$/,\n            exclude: /(node_modules)/,\n            resolve: {\n              extensions: [".ts", ".js"],\n            },\n            use: {\n              loader: "babel-loader",\n              options: {\n                presets: ["@babel/preset-env"],\n              },\n            },\n          },\n        ],\n      },\n      resolve: {\n        alias: {\n          "@": path.resolve(__dirname, "./"),\n          "@node-ext": path.resolve(__dirname, "./lib")\n        },\n        extensions: [".ts", ".js"],\n      },\n      target: "node",\n      node:{\n        __filename:true,\n        __dirname:true,  // these two options make the __filename & __dirname correspond to original file name\n      },\n      plugins: [],\n      // devtool: "source-map",\n    };\n    '}},900:function(e,n,t){var o=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function s(e){try{a(o.next(e))}catch(e){i(e)}}function l(e){try{a(o.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,l)}a((o=o.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.parseOptions=n.run=void 0;const r=t(81),i=t(265);Object.defineProperty(n,"parseOptions",{enumerable:!0,get:function(){return i.parse}}),n.run=function(e,n){return o(this,void 0,void 0,(function*(){const t=r.spawn("bash",[`-e${(null==n?void 0:n.debug)?"x":""}c`,e,"--",...(null==n?void 0:n.args)||[]],{cwd:null==n?void 0:n.cwd,env:Object.assign(Object.assign({},process.env),null==n?void 0:n.env)});return t.stdout.on("data",(e=>process.stdout.write(e))),t.stderr.on("data",(e=>process.stderr.write(e))),new Promise(((e,n)=>{t.on("error",(function(e){n(e)})),t.on("close",(function(t){0!==t?n(new Error(`exit code: ${t}`)):e(t)}))}))}))}},265:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.parse=void 0,n.parse=function(e,n,t){null==t&&(t=process.argv.slice(2));const o=n.split(/\s+/),r={},i={},s={};for(let e of o){let n,t=e.lastIndexOf("=");-1!=t&&(n=e.slice(t+1),e=e.slice(0,t));let o="zero";e.endsWith("::")?(o="many",e=e.slice(0,e.length-2)):e.endsWith(":")&&(o="one",e=e.slice(0,e.length-1));const l=e.split(",");if(0==l.length)continue;const a=l[l.length-1];if(null!=i[a])throw new Error(`duplicate option name:${a}`);i[a]=o,n&&(s[a]=n);for(const e of l)if(0!=e.length){if(null!=r[e])throw new Error(`duplicate option name:${e}`);r[e]=a}}const l=[],a={},c={};let d=0;function u(e,n){let o=n===c;o&&(n=null);const l=r[e];if(!l)throw new Error(`no such option:${e}`);const u=s[l];if(u&&(a[u]=e),"zero"===i[l]){if(o)return void(a[l]=!0);if(null!=n)if("on"==n||"On"==n||"ON"==n||"true"==n||"True"==n||"TRUE"==n)a[l]=!0;else{if("off"!=n&&"Off"!=n&&"OFF"!=n&&"false"!=n&&"False"!=n&&"FALSE"!=n)throw new Error(`option requires no argument:${e},except on/On/ON/true/True/TRUE or off/Off/OFF/false/False/FALSE`);a[l]=!1}else a[l]=!0}else if("one"===i[l]){if(o&&(n=t[++d]),null==n)throw new Error(`option requires one argument:${e}`);a[l]=n}else{if("many"!==i[l])throw new Error(`unknown option repeat:${e} ${i[l]}`);if(o&&(n=t[++d]),null==n)throw new Error(`option requires argument:${e}`);null==a[l]?a[l]=[n]:a[l].push(n)}}for(;d<t.length;d++){const e=t[d];if("--"==e){l.push(...t.slice(d+1));break}if("-"!=e)if(e.startsWith("--")){let n=e.slice(2);const t=n.lastIndexOf("=");let o;-1!=t?(o=n.slice(t+1),n=n.slice(0,t)):o=c,u(n,o)}else if(e.startsWith("-")){const n=e.slice(1);if(1==n.length){u(n,c);continue}const t=n[0],o=r[t],s=i[o];if("one"==s||"many"==s)u(t,n.slice(1));else if("zero"==s){for(const e of n.slice(0,n.length-1))u(e,null);u(n[n.length-1],c)}}else l.push(e);else l.push(e)}function p(){let n=e;return n.startsWith("\n")&&(n=n.slice(1)),n.endsWith("\n")&&(n=n.slice(0,n.length-1)),n}return!0===a.help&&(console.log(p()),process.exit(0)),{args:l,options:a,getHelp:p}}},192:function(e,n,t){var o=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function s(e){try{a(o.next(e))}catch(e){i(e)}}function l(e){try{a(o.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,l)}a((o=o.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.run=void 0;const r=t(17),i=t(292),s=t(37),l=t(258),a=t(900),c=t(113);function d(){return o(this,void 0,void 0,(function*(){const{args:e,options:n}=(0,a.parseOptions)('Usage: nx [OPTIONS] <script> [--] [script-args...]\n\nOptions:\n  -h, --help        show help message\n  -p, --print-dir   print the generated directory\n      --root        print root directory and exit\n  -x, --debug       log debug info\n  -c, --code        open the directory with vscode\n  -f, --force       force install modules\n      --clean       clean the target dir before writing files\n      --rm          remove the target dir, and do nothing\n\nYou can set `nx` as an alias to `node "$(npm -g root)/node-ext/bin/node-ext.js"` to simplify the usage.\nNOTE: you must not use with npx: `npx -g node-ext`, npx simply does make `npm install` fails without fair reason.\nSetup:\n  $ npm install -g node-ext # install or upgrade to newest version\n  $ echo "alias nx=\'node \\"\\$(npm -g root)/node-ext/bin/node-ext.js\\"\'" >> ~/.bash_profile\n\nExample:\n  $ nx --help       # show help\n  $ nx test.ts      # run test.ts\n  $ nx -c test.ts   # open the directory\n  $ nx update       # update node-ext version\n\nCompare with `ts-node`: you can also use `ts-node` to run typescript, e.g. `npx -g ts-node --transpile-only test.ts`.\nThe advantage that `nx` provides is it can provide default `webpack.config.js` and `tsconfg.json`,\nand with `--code` option we can edit ts files with vscode super easily.\n\n',"h,help p,print-dir root x,debug c,code f,force clean rm"),{debug:t,code:o,force:d,clean:u,rm:p,root:f,"print-dir":h}=n,[g,...m]=e,b=(0,s.tmpdir)(),v=r.join(b,"nx-sync");if(f)return void console.log(v);if(!g)throw new Error("requires script to run");if("update"===g)return void(yield(0,a.run)("npm remove -g node-ext; npm install -g node-ext",{debug:t}));const w=r.resolve(g);if(!r.isAbsolute(w))throw new Error(`failed to make ${g} absolute, the resolved path is ${w}`);if(!(yield i.stat(w).catch((e=>{throw new Error(`not exists: ${g}`)}))).isFile())throw new Error(`not a file: ${g}`);const x=r.dirname(w);if(!r.isAbsolute(x))throw new Error(`failed to detect absolute dir of ${g}, the resolved dir is ${x}`);if(x===v||x.startsWith(v))throw new Error(`${g} resides in nx-sync dir: ${v}, try another location`);const y=r.join(v,x);if(t&&console.error("target dir:",y),(u||p)&&(yield i.rm(y,{recursive:!0}),p))return;yield i.mkdir(y,{recursive:!0});const $=(0,l.formatPackageJSON)("tmp"),j=(0,l.formatTsConfigJSON)(),_=(0,l.formatWebpackConfigJS)(),O=r.resolve(__dirname,"../lib"),E="package.json.checksum",k=d?"":yield i.readFile(r.join(y,E),{encoding:"utf-8"}).catch((e=>{})),T=(0,c.createHash)("md5").update($).digest("hex"),S={"run.ts":`import "${w}"`,"package.json":$,[E]:T,"tsconfig.json":j,"webpack.config.js":_};if(yield Promise.all([...Object.keys(S).map((e=>i.writeFile(r.join(y,e),S[e]))),(0,a.run)(`rm -rf "${y}/src" ; ln -s "${x}" "${y}/src"`,{debug:t}),(0,a.run)(`cp -R "${O}" "${y}/lib"`,{debug:t})]),h)return void console.log(y);if(o)return void(yield(0,a.run)(`code --goto "${y}/src/${r.basename(w)}" "${y}"`,{debug:t}));let P=d||k!==T;if(!P){let e=!1;yield i.stat(r.join(y,"node_modules")).then((n=>e=n.isDirectory())).catch((e=>{})),P=!e}const F=t?"":"&>/dev/null";yield(0,a.run)(`\n    set -e\n    (\n        cd "$TARGET_DIR"\n        ${P?"npm install --no-audit --no-fund "+F:""}  # npm install is slow so we need a checksum to avoid repeat\n        npm run build-dev ${F} ; # dev mode webpack can use build cache\n    )\n    node "$TARGET_DIR/bin/run.js" "$@"\n    `,{debug:t,args:m,env:{TARGET_DIR:y}})}))}t(81),n.run=d,d().catch((e=>{console.error(e.message),process.exit(1)})).finally((()=>{}))},81:e=>{e.exports=require("child_process")},113:e=>{e.exports=require("crypto")},292:e=>{e.exports=require("fs/promises")},37:e=>{e.exports=require("os")},17:e=>{e.exports=require("path")}},n={};return function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={exports:{}};return e[o].call(i.exports,i,i.exports,t),i.exports}(192)})()));